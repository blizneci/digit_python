"""Глава 9.11. Словари"""

"""Принимает на вход строку и считает количество слов в этой строке,
затем выводит на печать 10 самых частых слов. Для одинокой частотности
сортировка по алфавиту.
Знаки препинания, слова меньше 3 символов - игнорируются.
Регист игнорируется.
Слово - то, что отделено пробелом, символом табуляции/перевода каретки.
"""

text_raw = """
Не жалею, не зову, не плачу,
Все пройдет, как с белых яблонь дым.
Увяданья золотом охваченный,
Я не буду больше молодым.

Ты теперь не так уж будешь биться,
Сердце, тронутое холодком,
И страна березового ситца
Не заманит шляться босиком.

Дух бродяжий! ты все реже, реже
Расшевеливаешь пламень уст
О моя утраченная свежесть,
Буйство глаз и половодье чувств.

Я теперь скупее стал в желаньях,
Жизнь моя? иль ты приснилась мне?
Словно я весенней гулкой ранью
Проскакал на розовом коне.

Все мы, все мы в этом мире тленны,
Тихо льется с кленов листьев медь…
Будь же ты вовек благословенно,
Что пришло процвесть и умереть.

"""

text_raw = text_raw.lower() # Исходный текст в нижнем регистре
not_alpha = {i for i in text_raw if not i.isalnum()} # Множество не буквенных символов
text = str(text_raw)
for i in not_alpha:
    text = text.replace(i, ' ')

words_set = set(word for word in text.split() if len(word) > 2) # Множество уникальных слов больше 2 символов
words_dict = {word: text.split().count(word) for word in words_set}
freq_set = sorted(set(words_dict.values()), reverse=True)
print(freq_set)
count_max = 10
for value in freq_set:
    for key in sorted(words_dict.keys()):
        if count_max == 0:
            break
        if words_dict[key] == value:
            print(f"{key}: {words_dict[key]}")
            count_max -= 1
